 LXI H,DATA
 CALL COMPUTE
 MOV A,H
 CALL 0F815H
 MOV A,L
 CALL 0F815H
 SHLD BNUM
 CALL ?FBBCD
 LHLD DNUM
 MOV A,H
 CALL 0F815H
 MOV A,L
 CALL 0F815H

 JMP 0F86CH

COMPUTE:
 CALL GETVL1
 MOV A,M
 INX H
 MOV B,D
 MOV C,E
 PUSH PSW
 PUSH B
 CALL GETVL1
 POP B
 MOV H,B
 MOV L,C
 POP PSW
 CALL ANDIR
 RET

ANDIR:
 CPI '+'
 JZ  CADD
 CPI '-'
 JZ CSUB
 CPI '*'
 JZ ?MULHD
 CPI '/'
 JZ ?DVNHD
 JMP ERR

CADD:
 DAD D
 RET

ERR:
 JMP 0F800H
 INX SP
 INX SP
 RET

CSUB:
 XCHG
 CALL ?NEGHL
 DAD D
 RET




GETVL1:
 LXI D,0
 MOV A,M
 CALL GET4
 ORA A
 RM
GET2:
 MOV A,M
 CALL GET4
 ORA A
 JM  GET1
 XCHG
 DAD H
 DAD H
 DAD H
 DAD H
 XCHG
 ORA E
 MOV E,A
 INX H
 JMP GET2
GET1:
 MOV A,M
 CPI 'H'
 JZ GET3
 MOV A,D
 STA DNUM+1
 MOV A,E
 STA DNUM
 PUSH H
 CALL ?FBCDB
 POP H
 XCHG
 LHLD BNUM
 XCHG
 RET

GET3:
 INX H
 RET

GET4:
 SUI '0'
 RC
 CPI 0AH
 RC
 SUI 7
 RC
 CPI 16
 RC
GET5:
 MVI A,-7
 RET


;ץףכןעוממשו נעוןגעבתןקבמיס BIN י BCD - ‏יףול
; DNUM - בהעוף BCD - ‏יףלב
; NDEC - הלימב -""-
; BNUM - הלימב BIN - ‏יףלב
; NBIN - הלימב -""-

; BINARY -> BCD
?FBBCD:
 LXI H,DNUM
 MVI B,NDEC
 CALL ?ZERON
 MVI A,NBIN
 ADD A
 ADD A
 ADD A
 MOV C,A
?MORE:
 LXI H,BNUM
 MVI B,NBIN
 CALL SHIFTL
 LXI H,DNUM
 MVI B,NDEC
 CALL ?DOUBL
 DCR C
 JNZ ?MORE
 RET

SHIFTL:
 XRA A
?AGAIN:
 MOV A,M
 RAL
 MOV M,A
 INX H
 DCR B
 JNZ ?AGAIN
 RET

?DOUBL:
 MOV A,M
 ADC M
 DAA
 MOV M,A
 INX H
 DCR B
 JNZ ?DOUBL
 RET

?ZERON:XRA A
LOOP1:MOV M,A
 INX H
 DCR B
 JNZ LOOP1
 RET

; BCD -> BINARY
?FBCDB:
 LXI H,BNUM
 MVI B,NBIN
 CALL ?ZERON
 MVI A,NDEC
 ADD A
 ADD A
 ADD A
 MOV C,A
?NEW:
 XRA A
 LXI H,DNUM+NDEC-1
 MVI B,NDEC
 CALL SHIFTR
 LXI H,BNUM+NBIN-1
 MVI B,NBIN
 CALL SHIFTR
 LXI H,DNUM
 MVI B,NDEC
 CALL ?CORR
 DCR C
 JNZ ?NEW
 RET

NBIN: EQU 2
NDEC: EQU 2
DNUM: DS 2
BNUM: DW 9876

SHIFTR:
 MOV A,M
 RAR
 MOV M,A
 DCX H
 DCR B
 JNZ SHIFTR
 RET

?CORR:
 MOV A,M
 ANI 8
 JZ ?NOCR1
 MOV A,M
 SUI 3
 MOV M,A
?NOCR1:
 MOV A,M
 ANI 80H
 JZ ?NOCR2
 MOV A,M
 SUI 30H
 MOV M,A
?NOCR2:
 INX H
 DCR B
 JNZ ?CORR
 RET

; 16-BIT MULTIPLY
; HL *= DE
?MULHD:
 MOV B,H
 MOV C,L
 LXI H,0
 MVI A,16
?01:
 DAD H
 XCHG
 DAD H
 XCHG
 JNC ?02
 DAD B
?02:
 DCR A
 JNZ ?01
 RET


; 16 - BIT UNSIGNED DIVISION
; HL /= DE
; DE = HL % DE
?DVNHD:
 MOV B,D
 MOV C,E
 LXI D,0
 MVI A,16
?21: PUSH PSW
 DAD H
 MOV A,E
 RAL
 MOV E,A
 MOV A,D
 RAL
 MOV D,A
 JC ?22
 MOV A,E
 SUB C
 MOV A,D
 SBB B
 JC ?23
?22:
 MOV A,E
 SUB C
 MOV E,A
 MOV A,D
 SBB B
 MOV D,A
 INR L
?23:
 POP PSW
 DCR A
 JNZ ?21
 RET

?ABSHL:
 MOV A,H
 ORA A
 RP
?NEGHL:
 DCX H
?NOTHL:
 MOV A,L
 CMA
 MOV L,A
 MOV A,H
 CMA
 MOV H,A
 RET

DATA: DB '2*2'


